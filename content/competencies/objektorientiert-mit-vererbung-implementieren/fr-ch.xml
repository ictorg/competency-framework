<?xml version="1.0" encoding="UTF-8"?>
<competency xmlns="https://ictorg.ch/competency" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://ictorg.ch/competency ../../../schema/competency.xsd">
    <meta>
        <provider name="ICT-Berufsbildung">
            <id>226B</id>
            <reference>https://cf.ict-berufsbildung.ch/modules.php?name=Mbk%26a=20101%26cmodnr=226B%26clang=fr</reference>
            <level>2</level>
            <lessons>40</lessons>
            <achnowledgment>Certificat fédéral de capacité</achnowledgment>
        </provider>
    </meta>
    <title>Implémenter orienté objets (avec hérédité)</title>
    <capability>Implémenter, tester et documenter un design orienté objets.</capability>
    <goals>
        <goal>
            Reproduire un design orienté objets et compléter par la mise en oeuvre de l'hérédité.
            <knowledge-list>
                <knowledge>
                    Connaître l'approche orientée objets avec classes et hérédité.
                </knowledge>
                <knowledge>
                    Pouvoir éliminer des redondances dans le design des classes par l'application de l'hérédité.
                </knowledge>
                <knowledge>
                    Pouvoir empêcher des structures de types commutables par la mise en oeuvre de délégations et hérédités, et ainsi assurer le développement futur de l'application.
                </knowledge>
                <knowledge>
                    Comprendre le principe de la liaison dynamique.
                </knowledge>
                <knowledge>
                    Prendre en compte, lors de l'élaboration de hiérachies d'hérédités, le principe de la spécialisation/généralisation y compris les classes abstraites.
                </knowledge>
            </knowledge-list>
        </goal>
        <goal>
            Reproduire la notation de structures dynamiques et statiques d'une application au moyen d'un langage unifié de modélisation (UML).
            <knowledge-list>
                <knowledge>
                    Connaître la notation par diagramme pour la représentation de l'hérédité.
                </knowledge>
                <knowledge>
                    Connaître la notation par diagramme pour la représentation d'interfaces.
                </knowledge>
            </knowledge-list>
        </goal>
        <goal>
            Implémenter un design orienté objet.
            <knowledge-list>
                <knowledge>
                    Connaître les éléments d'un langage orienté objets pour la mise en oeuvre de l'hérédité dans un design orienté objets.
                </knowledge>
                <knowledge>
                    Connaître les éléments d'un langage orienté objets pour la transcription de méthodes dans un design orienté objets.
                </knowledge>
                <knowledge>
                    Connaître les éléments d'un langage orienté objets pour la réalisation d'interfaces et de classes abstraites.
                </knowledge>
            </knowledge-list>
        </goal>
        <goal>
            Implémenter des cas avancés de tests pour des unités fonctionnelles qui sont indépendantes d'autres parties du système au moyen de techniques appropriées.
            <knowledge-list>
                <knowledge>
                    Connaître le moyen d'aide du Mocking afin d'éliminer les dépendances issues des cas de tests.
                </knowledge>
                <knowledge>
                    Connaître des moyens pour isoler les données de tests et les cas de tests afin d'assurer l'indépendance mutuelle des cas de tests.
                </knowledge>
                <knowledge>
                    Connaître des outils pour l'implémentation de cas isolés de tests.
                </knowledge>
            </knowledge-list>
        </goal>
    </goals>
</competency>
